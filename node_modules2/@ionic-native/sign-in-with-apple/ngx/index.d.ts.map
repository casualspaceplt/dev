{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @see https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidrequest\n */\nexport declare class ASAuthorizationAppleIDRequest {\n    static readonly ASAuthorizationScopeFullName = 0;\n    static readonly ASAuthorizationScopeEmail = 1;\n    requestedScopes?: number[];\n}\n/**\n * @see https://developer.apple.com/documentation/foundation/nspersonnamecomponents/1412193-phoneticrepresentation\n */\nexport interface NSPersonNameComponents {\n    /**\n     * The portion of a name’s full form of address that precedes the name itself (for example, \"Dr.,\" \"Mr.,\" \"Ms.\")\n     */\n    namePrefix?: string;\n    /**\n     * Name bestowed upon an individual to differentiate them from other members of a group that share a family name (for example, \"Johnathan\")\n     */\n    givenName?: string;\n    /**\n     * Secondary name bestowed upon an individual to differentiate them from others that have the same given name (for example, \"Maple\")\n     */\n    middleName?: string;\n    /**\n     * Name bestowed upon an individual to denote membership in a group or family. (for example, \"Appleseed\")\n     */\n    familyName?: string;\n    /**\n     * The portion of a name’s full form of address that follows the name itself (for example, \"Esq.,\" \"Jr.,\" \"Ph.D.\")\n     */\n    nameSuffix?: string;\n    /**\n     * Name substituted for the purposes of familiarity (for example, \"Johnny\")\n     */\n    nickname?: string;\n    /**\n     * The phonetic representation name components of the receiver\n     */\n    phoneticRepresentation?: NSPersonNameComponents;\n}\n/**\n * @see https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential\n */\nexport interface AppleSignInResponse {\n    /**\n     * The user’s email address i.e. abc@privaterelay.appleid.com\n     */\n    email?: string;\n    /**\n     * An arbitrary string that your app provided to the request that generated the credential\n     */\n    state?: string;\n    /**\n     * A JSON Web Token (JWT) that securely communicates information about the user to your app\n     */\n    identityToken: string;\n    /**\n     * A short-lived token used by your app for proof of authorization when interacting with the app's server counterpart\n     */\n    authorizationCode: string;\n    /**\n     * The user's name\n     * @see https://developer.apple.com/documentation/foundation/nspersonnamecomponents?language=objc\n     */\n    fullName?: NSPersonNameComponents;\n    /**\n     * An identifier associated with the authenticated user\n     */\n    user?: string;\n}\n/**\n * @see https://developer.apple.com/documentation/foundation/nserror\n */\nexport interface NSError {\n    /**\n     * The error code\n     */\n    code?: number;\n    /**\n     * A string containing the localized description of the error\n     */\n    localizedDescription?: string;\n    /**\n     * A string containing the localized explanation of the reason for the error\n     */\n    localizedFailureReason?: string;\n}\nexport interface AppleSignInErrorResponse extends NSError {\n    /**\n     * The error i.e. \"ASAUTHORIZATION_ERROR\"\n     */\n    error?: string;\n}\n/**\n * @name Sign In With Apple\n * @description\n * Sign in with Apple makes it easy for users to sign in to your apps and websites using their Apple ID.\n * Instead of filling out forms, verifying email addresses, and choosing new passwords,\n * they can use Sign in with Apple to set up an account and start using your app right away.\n * All accounts are protected with two-factor authentication for superior security,\n * and Apple will not track users’ activity in your app or website.\n * *Source:* https://developer.apple.com/sign-in-with-apple/\n *\n * @usage\n * ```typescript\n * import { SignInWithApple, AppleSignInResponse, AppleSignInErrorResponse, ASAuthorizationAppleIDRequest } from '@ionic-native/sign-in-with-apple/ngx';\n *\n *\n * constructor(private signInWithApple: SignInWithApple) { }\n *\n * ...\n *\n *\n *   this.signInWithApple.signin({\n *     requestedScopes: [\n *       ASAuthorizationAppleIDRequest.ASAuthorizationScopeFullName,\n *       ASAuthorizationAppleIDRequest.ASAuthorizationScopeEmail\n *     ]\n *   })\n *   .then((res: AppleSignInResponse) => {\n *     // https://developer.apple.com/documentation/signinwithapplerestapi/verifying_a_user\n *     alert('Send token to apple for verification: ' + res.identityToken);\n *     console.log(res);\n *   })\n *   .catch((error: AppleSignInErrorResponse) => {\n *     alert(error.code + ' ' + error.localizedDescription);\n *     console.error(error);\n *   });\n *\n * ```\n */\nexport declare class SignInWithApple extends IonicNativePlugin {\n    /**\n     * Starts the authorization flows named during controller initialization\n     * @see https://developer.apple.com/documentation/authenticationservices/asauthorizationcontroller/3153047-performrequests\n     * @return {Promise<AppleSignInResponse>} Returns a promise when authorization succeeds\n     * @param {ASAuthorizationAppleIDRequest} options\n     * @throws AppleSignInErrorResponse\n     */\n    signin(options?: ASAuthorizationAppleIDRequest): Promise<AppleSignInResponse>;\n}\n"]}