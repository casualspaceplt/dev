{"version":3,"file":"ng-gallery-lightbox.umd.js","sources":["../../../projects/ng-gallery/lightbox/src/lightbox.model.ts","../../../projects/ng-gallery/lightbox/src/lightbox.animation.ts","../../../projects/ng-gallery/lightbox/src/lightbox.component.ts","../../../projects/ng-gallery/lightbox/src/lightbox.default.ts","../../../projects/ng-gallery/lightbox/src/lightbox.service.ts","../../../projects/ng-gallery/lightbox/src/gallerize.directive.ts","../../../projects/ng-gallery/lightbox/src/lightbox.directive.ts","../../../projects/ng-gallery/lightbox/src/lightbox.module.ts","../../../projects/ng-gallery/lightbox/src/ng-gallery-lightbox.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const LIGHTBOX_CONFIG = new InjectionToken<LightboxConfig>('LIGHTBOX_CONFIG');\n\nexport interface LightboxConfig {\n  backdropClass?: string;\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  keyboardShortcuts?: boolean;\n  closeIcon?: string;\n  role?: string;\n  ariaLabelledBy?: string;\n  ariaLabel?: string;\n  ariaDescribedBy?: string;\n  startAnimationTime?: number;\n  exitAnimationTime?: number;\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\n\nexport const lightboxAnimation = trigger('lightbox', [\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\n  // decimate the animation performance. Leaving it as `none` solves both issues.\n  state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n  state('enter', style({transform: 'none'})),\n  transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)',\n    style({transform: 'none', opacity: 1}))),\n  transition('* => void, * => exit',\n    animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n]);\n\n","import { Component, Optional, ChangeDetectionStrategy, ElementRef, Inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport { AnimationEvent } from '@angular/animations';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { FocusTrap, ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\nimport { lightboxAnimation } from './lightbox.animation';\n\n@Component({\n  selector: 'lightbox',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [lightboxAnimation],\n  styleUrls: ['./lightbox.component.scss'],\n  template: `\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\n    </gallery>\n  `,\n  host: {\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[attr.id]': '\"lightbox-\" + id',\n    '[attr.role]': 'role',\n    '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\n    '[attr.aria-label]': 'ariaLabel',\n    '[attr.aria-describedby]': 'ariaDescribedBy || null',\n    '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\n    '(@lightbox.done)': 'onAnimationDone($event)',\n  }\n})\nexport class LightboxComponent {\n\n  /** Gallery ref id */\n  id: string;\n\n  /** Overlay ref to close the lightbox */\n  overlayRef: OverlayRef;\n\n  /** Close button svg data */\n  closeIcon: string;\n\n  /** State of the lightbox animation. */\n  state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** The ARIA role of the lightbox element. */\n  role: string;\n\n  /** Aria label to assign to the lightbox element */\n  ariaLabel: string;\n\n  /** ID of the element that should be considered as the lightbox's label. */\n  ariaLabelledBy: string;\n\n  /** ID of the element that describes the lightbox. */\n  ariaDescribedBy: string;\n\n  /** The lightbox start animation time in ms */\n  startAnimationTime: number;\n\n  /** The lightbox exit animation time in ms */\n  exitAnimationTime: number;\n\n  /** The class that traps and manages focus within the lightbox. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the lightbox was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement;\n\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\n              private _focusTrapFactory: ConfigurableFocusTrapFactory,\n              private _elementRef: ElementRef,\n              public sanitizer: DomSanitizer) {\n    this._savePreviouslyFocusedElement();\n  }\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else {\n      this.overlayRef.dispose();\n      this._restoreFocus();\n    }\n  }\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    // If were to attempt to focus immediately, then the content of the lightbox would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\n  private _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n\n  /** Restores focus to the element that was focused before the lightbox opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n}\n","import { LightboxConfig } from './lightbox.model';\n\nexport const defaultConfig: LightboxConfig = {\n  backdropClass: 'g-backdrop',\n  panelClass: 'g-overlay',\n  hasBackdrop: true,\n  keyboardShortcuts: true,\n  role: 'lightbox',\n  startAnimationTime: 150,\n  exitAnimationTime: 75,\n  closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\n</svg>\n`\n};\n","import { ComponentRef, Inject, Injectable, Optional } from '@angular/core';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayRef, OverlayConfig } from '@angular/cdk/overlay';\nimport { LEFT_ARROW, RIGHT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { Gallery } from 'ng-gallery';\n// Uncomment the following line in development mode\n// import { Gallery } from '../../src/public-api';\n\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\nimport { defaultConfig } from './lightbox.default';\nimport { LightboxComponent } from './lightbox.component';\n\n@Injectable()\nexport class Lightbox {\n\n  /** Gallery overlay ref */\n  private _overlayRef: OverlayRef;\n\n  /** Global config */\n  private _config: LightboxConfig;\n\n  /** Stream that emits when lightbox is opened */\n  opened = new Subject<string>();\n\n  /** Stream that emits when lightbox is closed */\n  closed = new Subject<string>();\n\n  constructor(@Optional() @Inject(LIGHTBOX_CONFIG) config: LightboxConfig, private _gallery: Gallery, private _overlay: Overlay) {\n    this._config = config ? {...defaultConfig, ...config} : defaultConfig;\n  }\n\n  /**\n   * Set Lightbox Config\n   * @param config - LightboxConfig\n   */\n  setConfig(config: LightboxConfig) {\n    this._config = {...this._config, ...config};\n  }\n\n  /**\n   * Open Lightbox Overlay\n   * @param i - Current Index\n   * @param id - Gallery ID\n   * @param config - Lightbox Config\n   */\n  open(i = 0, id = 'lightbox', config?: LightboxConfig) {\n\n    const _config = config ? {...this._config, ...config} : this._config;\n\n    const overlayConfig: OverlayConfig = {\n      backdropClass: _config.backdropClass,\n      panelClass: _config.panelClass,\n      hasBackdrop: _config.hasBackdrop,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      disposeOnNavigation: true\n    };\n\n    const galleryRef = this._gallery.ref(id);\n    galleryRef.set(i);\n\n    this._overlayRef = this._overlay.create(overlayConfig);\n\n    // overlay opened event\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id));\n\n    // overlay closed event\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id));\n\n    // Attach gallery to the overlay\n    const galleryPortal = new ComponentPortal(LightboxComponent);\n    const lightboxRef: ComponentRef<LightboxComponent> = this._overlayRef.attach(galleryPortal);\n\n    lightboxRef.instance.id = id;\n    lightboxRef.instance.overlayRef = this._overlayRef;\n    lightboxRef.instance.closeIcon = this._config.closeIcon;\n    lightboxRef.instance.role = this._config.role;\n    lightboxRef.instance.ariaLabel = this._config.ariaLabel;\n    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\n    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\n    lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\n    lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\n\n    if (_config.hasBackdrop) {\n      this._overlayRef.backdropClick().subscribe(() => this.close());\n    }\n\n    // Add keyboard shortcuts\n    if (_config.keyboardShortcuts) {\n      this._overlayRef.keydownEvents().subscribe((event: any) => {\n        switch (event.keyCode) {\n          case LEFT_ARROW:\n            galleryRef.prev();\n            break;\n          case RIGHT_ARROW:\n            galleryRef.next();\n            break;\n          case ESCAPE:\n            this.close();\n        }\n      });\n    }\n  }\n\n  /**\n   * Close Lightbox Overlay\n   */\n  close() {\n    if (this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Optional,\n  Self,\n  Host,\n  NgZone,\n  ElementRef,\n  Renderer2,\n  PLATFORM_ID\n} from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\nimport { Gallery, GalleryRef, ImageItem, GalleryComponent, GalleryState, GalleryItem } from 'ng-gallery';\n// Uncomment the following line in development mode\n// import { Gallery, GalleryRef, ImageItem, GalleryComponent, GalleryState, GalleryItem } from '../../src/public-api';\nimport { Lightbox } from './lightbox.service';\n\nimport { Subject, Subscription, from, EMPTY } from 'rxjs';\nimport { tap, map, switchMap, finalize, debounceTime } from 'rxjs/operators';\n\n/**\n * This directive has 2 modes:\n * 1 - If host element is a HTMLElement, it detects the images and hooks their clicks to lightbox\n * 2 - If host element is a GalleryComponent, it hooks the images click to the lightbox\n */\n\nconst enum GallerizeMode {\n  Detector = 'detector',\n  Gallery = 'gallery'\n}\n\n@Directive({\n  selector: '[gallerize]'\n})\nexport class GallerizeDirective implements OnInit, OnDestroy {\n\n  /** Default gallery id */\n  private _galleryId = 'lightbox';\n\n  /** Gallerize mode */\n  private readonly _mode: GallerizeMode;\n\n  /** If host element is a HTMLElement, will use the following variables: */\n\n  /** Stream that emits to fire the detection stream the image elements has changed */\n  private _observer$: any;\n\n  /** Stream that emits when image is discover */\n  private _detector$: Subject<any>;\n\n  /** If host element is a GalleryComponent, will use the following variables: */\n\n  /** Gallery events (if used on a gallery component) */\n  private _itemClick$: Subscription;\n  private _itemChange$: Subscription;\n\n  // ======================================================\n\n  /** If set, it will become the gallery id */\n  @Input() gallerize: string;\n\n  /** The selector used to query images elements */\n  @Input() selector = 'img';\n\n  constructor(private _zone: NgZone,\n              private _el: ElementRef,\n              private _gallery: Gallery,\n              private _lightbox: Lightbox,\n              private _renderer: Renderer2,\n              @Inject(PLATFORM_ID) platform: Object,\n              @Inject(DOCUMENT) private _document: any,\n              @Host() @Self() @Optional() private _galleryCmp: GalleryComponent) {\n\n    // Set gallerize mode\n    if (isPlatformBrowser(platform)) {\n      this._mode = _galleryCmp ? GallerizeMode.Gallery : GallerizeMode.Detector;\n    }\n  }\n\n  ngOnInit() {\n    this._zone.runOutsideAngular(() => {\n      this._galleryId = this.gallerize || this._galleryId;\n      const ref = this._gallery.ref(this._galleryId);\n\n      switch (this._mode) {\n        case GallerizeMode.Detector:\n          this.detectorMode(ref);\n          break;\n        case GallerizeMode.Gallery:\n          this.galleryMode(ref);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    switch (this._mode) {\n      case GallerizeMode.Detector:\n        this._detector$.complete();\n        this._observer$.disconnect();\n        break;\n      case GallerizeMode.Gallery:\n        this._itemClick$.unsubscribe();\n        this._itemChange$.unsubscribe();\n    }\n  }\n\n  /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\n   * Adds a click event to each gallery item so it opens in lightbox */\n  private galleryMode(galleryRef: GalleryRef) {\n    // Clone its items to the new gallery instance\n    this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe((i: number) => this._lightbox.open(i, this._galleryId));\n    this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe((state: GalleryState) => galleryRef.load(state.items));\n  }\n\n  /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\n   *  Detects images and adds a click event to each image so it opens in the lightbox */\n  private detectorMode(galleryRef: GalleryRef) {\n    this._detector$ = new Subject();\n    // Query image elements\n    this._detector$.pipe(\n      debounceTime(300),\n      switchMap(() => {\n\n        /** get all img elements from content */\n        const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\n\n        if (imageElements && imageElements.length) {\n\n          const images: GalleryItem[] = [];\n\n          return from(imageElements).pipe(\n            map((el: any, i) => {\n              // Add click event to the image\n              this._renderer.setStyle(el, 'cursor', 'pointer');\n              this._renderer.setProperty(el, 'onclick', () =>\n                this._zone.run(() => this._lightbox.open(i, this._galleryId))\n              );\n\n              if (el instanceof HTMLImageElement) {\n                // If element is type of img use the src property\n                return {\n                  src: el.getAttribute('imageSrc') || el.src,\n                  thumb: el.getAttribute('thumbSrc') || el.src\n                };\n              } else {\n                // Otherwise, use element background-image url\n                const elStyle = el.currentStyle || this._document.defaultView.getComputedStyle(el, null);\n                const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\n                return {\n                  src: el.getAttribute('imageSrc') || background,\n                  thumb: el.getAttribute('thumbSrc') || background\n                };\n              }\n            }),\n            tap((data: any) => images.push(new ImageItem(data))),\n            finalize(() => galleryRef.load(images))\n          );\n        } else {\n          return EMPTY;\n        }\n      })\n    ).subscribe();\n\n    // Observe content changes\n    this._observer$ = new MutationObserver(() => this._detector$.next());\n    this._observer$.observe(this._el.nativeElement, {childList: true, subtree: true});\n  }\n}\n","import { Directive, ElementRef, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { fromEvent, SubscriptionLike, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Lightbox } from './lightbox.service';\n\n@Directive({\n  selector: '[lightbox]'\n})\nexport class LightboxDirective implements OnInit, OnDestroy {\n\n  clickEvent: SubscriptionLike = Subscription.EMPTY;\n\n  @Input('lightbox') index = 0;\n  @Input('gallery') id = 'root';\n\n  constructor(private _lightbox: Lightbox, private _el: ElementRef, private _renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\n    this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(\n      tap(() => this._lightbox.open(this.index, this.id))\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.clickEvent.unsubscribe();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { A11yModule } from '@angular/cdk/a11y';\n\nimport { GalleryModule } from 'ng-gallery';\n// Uncomment the following line in development mode\n// import { GalleryModule } from '../../src/public-api';\n\nimport { Lightbox } from './lightbox.service';\nimport { LightboxComponent } from './lightbox.component';\nimport { LightboxDirective } from './lightbox.directive';\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\nimport { GallerizeDirective } from './gallerize.directive';\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    GalleryModule,\n    A11yModule\n  ],\n  declarations: [\n    LightboxComponent,\n    LightboxDirective,\n    GallerizeDirective\n  ],\n  exports: [\n    LightboxDirective,\n    GallerizeDirective\n  ],\n  providers: [\n    Lightbox\n  ],\n  entryComponents: [\n    LightboxComponent\n  ]\n})\nexport class LightboxModule {\n  static withConfig(config: LightboxConfig): ModuleWithProviders<LightboxModule> {\n    return {\n      ngModule: LightboxModule,\n      providers: [\n        {\n          provide: LIGHTBOX_CONFIG,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {lightboxAnimation as ɵa} from './lightbox.animation';\nexport {LightboxDirective as ɵb} from './lightbox.directive';"],"names":["InjectionToken","trigger","state","style","transition","animate","Component","ChangeDetectionStrategy","Optional","Inject","DOCUMENT","ConfigurableFocusTrapFactory","ElementRef","DomSanitizer","Subject","ComponentPortal","LEFT_ARROW","RIGHT_ARROW","ESCAPE","Injectable","Gallery","Overlay","isPlatformBrowser","debounceTime","switchMap","from","map","tap","ImageItem","finalize","EMPTY","Directive","NgZone","Renderer2","PLATFORM_ID","GalleryComponent","Host","Self","Input","Subscription","fromEvent","NgModule","OverlayModule","GalleryModule","A11yModule"],"mappings":"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"}